@mixin px-rem($property, $values...) {
	$pxValues: ();
	$remValues: ();

	@each $value in $values {
		$val: strip-units($value);
		@if not not index("initial" "inherit" "auto" 0, $value) {
			$pxValues: append($pxValues, $val);
			$remValues: append($remValues, $val);
		} @else {
			$pxValues: append($pxValues, $val*1px);
			$remValues: append($remValues, rem($val) );
		}
	}

	#{$property}: $pxValues;
	#{$property}: $remValues;
}
// @mixin fs($number) {
// 	@include px-rem(font-size, $number);
// }

@mixin width-height($x...) {
	@if length($x) == 1 {
		@include px-rem(width,nth($x,1));
		@include px-rem(height,nth($x,1));
	} @else {
		@include px-rem(width,nth($x,1));
		@include px-rem(height,nth($x,2));
	}
}

@mixin size($width, $height: $width) {
      width: $width;
      height: $height;
}

@mixin center($hz,$vt) {
	.csstransforms & {
		position: relative;
		@if $hz == 'hz' and $vt == 'vt' {
			top: 50%;
			left: 50%;
			@include transform(translateX(-50%) translateY(-50%));
		} @else if $hz == 'hz' {
			left: 50%;
			@include transform(translateX(-50%));
		} @else if $vt == 'vt' {
			top: 50%;
			@include transform(translateY(-50%));
		}
	}
}
@mixin placeholder() {
	::-webkit-input-placeholder {
		@content;
	}
	:-moz-placeholder {
		@content;

	}
	::-moz-placeholder {
		@content;
	}

	:-ms-input-placeholder {
		@content;
	}
}

@mixin hide($bp) {
	@if $bp == all {
		display: none;
		width: 0;
		height: 0;
		overflow: hidden;
		clip: rect(0,0,0,0);
	} @else {
		@include breakpoint($bp) {
			display: none;
			width: 0;
			height: 0;
			overflow: hidden;
			clip: rect(0,0,0,0);
		}
	}
}

@mixin bp($name) {
	@if not index(map-keys($breakpoints), $name) {
		@warn "Invalid breakpoint `#{$name}`.";
	}
	@else {
		@media (min-width: map-get($breakpoints, $name)) {
			@content;
		}
	}
}

@mixin fsmooth($yes: yes) {
	@if $yes == 'no' {
		-webkit-font-smoothing: subpixel-antialiased;
		-moz-osx-font-smoothing: subpixel-antialiased;
	} @else {
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: antialiased;
	}
}